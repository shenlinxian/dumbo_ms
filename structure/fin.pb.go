// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.4
// source: fin.proto

package structure

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FinMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType int32 `protobuf:"varint,1,opt,name=MsgType,proto3" json:"MsgType,omitempty"` //1: rbc 2: rbc with finish 3: aba
	ID      int32 `protobuf:"varint,3,opt,name=ID,proto3" json:"ID,omitempty"`
	RcvID   int32 `protobuf:"varint,5,opt,name=RcvID,proto3" json:"RcvID,omitempty"`
	Round   int32 `protobuf:"varint,7,opt,name=Round,proto3" json:"Round,omitempty"`
	// rbc info
	Leader  int32    `protobuf:"varint,9,opt,name=Leader,proto3" json:"Leader,omitempty"`
	RBCType int32    `protobuf:"varint,11,opt,name=RBCType,proto3" json:"RBCType,omitempty"` //1 for ready 2 for echo
	Msglen  int32    `protobuf:"varint,13,opt,name=Msglen,proto3" json:"Msglen,omitempty"`
	Root    []byte   `protobuf:"bytes,17,opt,name=Root,proto3" json:"Root,omitempty"`     //store root
	Values  [][]byte `protobuf:"bytes,19,rep,name=Values,proto3" json:"Values,omitempty"` //store path
	// aba info
	BARound   int32  `protobuf:"varint,21,opt,name=BARound,proto3" json:"BARound,omitempty"`
	Loop      int32  `protobuf:"varint,22,opt,name=Loop,proto3" json:"Loop,omitempty"`
	BAType    int32  `protobuf:"varint,23,opt,name=BAType,proto3" json:"BAType,omitempty"`
	Value     bool   `protobuf:"varint,25,opt,name=Value,proto3" json:"Value,omitempty"`
	ConfValue []bool `protobuf:"varint,27,rep,packed,name=ConfValue,proto3" json:"ConfValue,omitempty"`
}

func (x *FinMessage) Reset() {
	*x = FinMessage{}
	mi := &file_fin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinMessage) ProtoMessage() {}

func (x *FinMessage) ProtoReflect() protoreflect.Message {
	mi := &file_fin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinMessage.ProtoReflect.Descriptor instead.
func (*FinMessage) Descriptor() ([]byte, []int) {
	return file_fin_proto_rawDescGZIP(), []int{0}
}

func (x *FinMessage) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *FinMessage) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *FinMessage) GetRcvID() int32 {
	if x != nil {
		return x.RcvID
	}
	return 0
}

func (x *FinMessage) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *FinMessage) GetLeader() int32 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *FinMessage) GetRBCType() int32 {
	if x != nil {
		return x.RBCType
	}
	return 0
}

func (x *FinMessage) GetMsglen() int32 {
	if x != nil {
		return x.Msglen
	}
	return 0
}

func (x *FinMessage) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *FinMessage) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *FinMessage) GetBARound() int32 {
	if x != nil {
		return x.BARound
	}
	return 0
}

func (x *FinMessage) GetLoop() int32 {
	if x != nil {
		return x.Loop
	}
	return 0
}

func (x *FinMessage) GetBAType() int32 {
	if x != nil {
		return x.BAType
	}
	return 0
}

func (x *FinMessage) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *FinMessage) GetConfValue() []bool {
	if x != nil {
		return x.ConfValue
	}
	return nil
}

var File_fin_proto protoreflect.FileDescriptor

var file_fin_proto_rawDesc = []byte{
	0x0a, 0x09, 0x66, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x22, 0xd2, 0x02, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x52, 0x63, 0x76, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x52, 0x63, 0x76,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x52, 0x42, 0x43, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x52, 0x42, 0x43, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x73,
	0x67, 0x6c, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x73, 0x67, 0x6c,
	0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x13, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x6f, 0x70,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4c, 0x6f, 0x6f, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x42, 0x41, 0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x42, 0x41,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x66, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x08, 0x52, 0x09, 0x43,
	0x6f, 0x6e, 0x66, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fin_proto_rawDescOnce sync.Once
	file_fin_proto_rawDescData = file_fin_proto_rawDesc
)

func file_fin_proto_rawDescGZIP() []byte {
	file_fin_proto_rawDescOnce.Do(func() {
		file_fin_proto_rawDescData = protoimpl.X.CompressGZIP(file_fin_proto_rawDescData)
	})
	return file_fin_proto_rawDescData
}

var file_fin_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_fin_proto_goTypes = []any{
	(*FinMessage)(nil), // 0: struct.FinMessage
}
var file_fin_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fin_proto_init() }
func file_fin_proto_init() {
	if File_fin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fin_proto_goTypes,
		DependencyIndexes: file_fin_proto_depIdxs,
		MessageInfos:      file_fin_proto_msgTypes,
	}.Build()
	File_fin_proto = out.File
	file_fin_proto_rawDesc = nil
	file_fin_proto_goTypes = nil
	file_fin_proto_depIdxs = nil
}
