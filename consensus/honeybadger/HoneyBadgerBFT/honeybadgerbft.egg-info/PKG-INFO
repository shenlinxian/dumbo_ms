Metadata-Version: 2.1
Name: honeybadgerbft
Version: 0.1.0
Summary: The Honey Badger of BFT Protocols
Home-page: https://github.com/amiller/HoneyBadgerBFT
Author: Andrew Miller et al.
License: CRAPL
Keywords: distributed systems,cryptography,byzantine fault tolerance
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Requires-Python: >=3.6
Requires-Dist: enum34
Requires-Dist: gevent
Requires-Dist: gmpy2
Requires-Dist: pysocks
Requires-Dist: pycrypto
Requires-Dist: ecdsa
Requires-Dist: zfec>=1.5.0
Requires-Dist: gipc
Requires-Dist: coincurve
Provides-Extra: test
Requires-Dist: coverage; extra == "test"
Requires-Dist: flake8; extra == "test"
Requires-Dist: logutils; extra == "test"
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Requires-Dist: pytest-mock; extra == "test"
Requires-Dist: pytest-sugar; extra == "test"
Requires-Dist: nose2; extra == "test"
Provides-Extra: dev
Requires-Dist: ipdb; extra == "dev"
Requires-Dist: ipython; extra == "dev"
Requires-Dist: coverage; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: logutils; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: pytest-sugar; extra == "dev"
Requires-Dist: nose2; extra == "dev"
Requires-Dist: Sphinx; extra == "dev"
Requires-Dist: sphinx-autobuild; extra == "dev"
Requires-Dist: sphinx_rtd_theme; extra == "dev"
Provides-Extra: docs
Requires-Dist: Sphinx; extra == "docs"
Requires-Dist: sphinx-autobuild; extra == "docs"
Requires-Dist: sphinx_rtd_theme; extra == "docs"


Most fault tolerant protocols (including RAFT, PBFT, Zyzzyva, Q/U)
don't guarantee good performance when there are Byzantine faults. Even
the so-called "robust" BFT protocols (like UpRight, RBFT, Prime,
Spinning, and Stellar) have various hard-coded timeout parameters, and
can only guarantee performance when the network behaves approximately as
expected - hence they are best suited to well-controlled settings like
corporate data centers.

HoneyBadgerBFT is fault tolerance for the wild wild wide-area-network.
HoneyBadger nodes can even stay hidden behind anonymizing relays like
Tor, and the purely-asynchronous protocol will make progress at whatever
rate the network supports.

